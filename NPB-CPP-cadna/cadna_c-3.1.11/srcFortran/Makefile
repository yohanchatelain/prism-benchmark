# Makefile.in generated by automake 1.15.1 from Makefile.am.
# srcFortran/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/cadna_c
pkgincludedir = $(includedir)/cadna_c
pkglibdir = $(libdir)/cadna_c
pkglibexecdir = $(libexecdir)/cadna_c
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = srcFortran
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_mpi.m4 \
	$(top_srcdir)/m4/cadna_check_compiler_c_flag.m4 \
	$(top_srcdir)/m4/cadna_check_compiler_flag.m4 \
	$(top_srcdir)/m4/cadna_check_cxx_lib.m4 \
	$(top_srcdir)/m4/cadna_check_fc_compiler_flag.m4 \
	$(top_srcdir)/m4/cadna_check_openmp4.m4 \
	$(top_srcdir)/m4/cadna_check_openmp_flags.m4 \
	$(top_srcdir)/m4/cadna_check_openmp_roundingmode.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libcadnaFortran_a_AR = $(AR) $(ARFLAGS)
libcadnaFortran_a_LIBADD =
am__libcadnaFortran_a_SOURCES_DIST = cadna_binding.cc \
	cadna_utils_binding.cc cadna_add_binding.cc \
	cadna_affect_binding.cc cadna_convert_binding.cc \
	cadna_div_binding.cc cadna_eq_binding.cc cadna_ge_binding.cc \
	cadna_gt_binding.cc cadna_le_binding.cc cadna_lt_binding.cc \
	cadna_math_binding.cc cadna_mult_binding.cc \
	cadna_ne_binding.cc cadna_opp_binding.cc cadna_pow_binding.cc \
	cadna_sub_binding.cc cadna_plus_binding.cc cadna_types.f90 \
	cadna_add.f90 cadna_affect.f90 cadna_div.f90 cadna_gt.f90 \
	cadna_ge.f90 cadna_lt.f90 cadna_le.f90 cadna_eq.f90 \
	cadna_ne.f90 cadna_convert.f90 cadna_prec.f90 cadna_mult.f90 \
	cadna_sub.f90 cadna_pow.f90 cadna_opp.f90 cadna_math.f90 \
	cadna_utils.f90 cadna_array.f90 cadna_plus.f90 \
	cadna_cmplx_add.f90 cadna_cmplx_sub.f90 cadna_cmplx_opp.f90 \
	cadna_cmplx_affect.f90 cadna_cmplx_convert.f90 \
	cadna_cmplx_mult.f90 cadna_cmplx_div.f90 cadna_cmplx_eq.f90 \
	cadna_cmplx_ne.f90 cadna_cmplx_math.f90 cadna_cmplx_pow.f90 \
	cadna_cmplx_array.f90 cadna_cmplx_plus.f90 cadna.f90
#am__objects_1 = libcadnaFortran_a-cadna_add_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_affect_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_convert_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_div_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_eq_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_ge_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_gt_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_le_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_lt_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_math_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_mult_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_ne_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_opp_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_pow_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_sub_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_plus_binding.$(OBJEXT)
#am__objects_2 =  \
#	libcadnaFortran_a-cadna_types.$(OBJEXT) \
#	libcadnaFortran_a-cadna_add.$(OBJEXT) \
#	libcadnaFortran_a-cadna_affect.$(OBJEXT) \
#	libcadnaFortran_a-cadna_div.$(OBJEXT) \
#	libcadnaFortran_a-cadna_gt.$(OBJEXT) \
#	libcadnaFortran_a-cadna_ge.$(OBJEXT) \
#	libcadnaFortran_a-cadna_lt.$(OBJEXT) \
#	libcadnaFortran_a-cadna_le.$(OBJEXT) \
#	libcadnaFortran_a-cadna_eq.$(OBJEXT) \
#	libcadnaFortran_a-cadna_ne.$(OBJEXT) \
#	libcadnaFortran_a-cadna_convert.$(OBJEXT) \
#	libcadnaFortran_a-cadna_prec.$(OBJEXT) \
#	libcadnaFortran_a-cadna_mult.$(OBJEXT) \
#	libcadnaFortran_a-cadna_sub.$(OBJEXT) \
#	libcadnaFortran_a-cadna_pow.$(OBJEXT) \
#	libcadnaFortran_a-cadna_opp.$(OBJEXT) \
#	libcadnaFortran_a-cadna_math.$(OBJEXT) \
#	libcadnaFortran_a-cadna_utils.$(OBJEXT) \
#	libcadnaFortran_a-cadna_array.$(OBJEXT) \
#	libcadnaFortran_a-cadna_plus.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_add.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_sub.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_opp.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_affect.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_convert.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_mult.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_div.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_eq.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_ne.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_math.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_pow.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_array.$(OBJEXT) \
#	libcadnaFortran_a-cadna_cmplx_plus.$(OBJEXT) \
#	libcadnaFortran_a-cadna.$(OBJEXT)
#am_libcadnaFortran_a_OBJECTS =  \
#	libcadnaFortran_a-cadna_binding.$(OBJEXT) \
#	libcadnaFortran_a-cadna_utils_binding.$(OBJEXT) \
#	$(am__objects_1) $(am__objects_2)
libcadnaFortran_a_OBJECTS = $(am_libcadnaFortran_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_$(V))
am__v_FC_ = $(am__v_FC_$(AM_DEFAULT_VERBOSITY))
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_FCLD = $(am__v_FCLD_$(V))
am__v_FCLD_ = $(am__v_FCLD_$(AM_DEFAULT_VERBOSITY))
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libcadnaFortran_a_SOURCES)
DIST_SOURCES = $(am__libcadnaFortran_a_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(nodist_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/admin/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11/admin/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_CFLAGS = -Wall -frounding-math 
AM_CXXFLAGS = -Wall -frounding-math 
AM_DEFAULT_VERBOSITY = 1
AM_FCFLAGS = -Wall -frounding-math 
AR = ar
AUTOCONF = ${SHELL} /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11/admin/missing autoconf
AUTOHEADER = ${SHELL} /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11/admin/missing autoheader
AUTOMAKE = ${SHELL} /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11/admin/missing automake-1.15
AWK = gawk
CADNA_CXX_LIB = -lstdc++
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCADNADEBUGFLAGS = -O0 -g 
CXXCADNAOPTIMFLAGS = -O3
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FC = gfortran
FCCADNACOMMONFLAGS = 
FCFLAGS = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11/admin/missing makeinfo
MKDIR_P = /usr/bin/mkdir -p
MPICC = gcc
MPICXX = g++
MPIFC = gfortran
MPILIBS = 
OBJEXT = o
OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = -fopenmp
OPENMP_LDFLAGS = 
PACKAGE = cadna_c
PACKAGE_BUGREPORT = cadna-team@lip6.fr
PACKAGE_NAME = CADNA_C
PACKAGE_STRING = CADNA_C 3.1.11
PACKAGE_TARNAME = cadna_c
PACKAGE_URL = 
PACKAGE_VERSION = 3.1.11
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 3.1.11
abs_builddir = /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11/srcFortran
abs_srcdir = /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11/srcFortran
abs_top_builddir = /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11
abs_top_srcdir = /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_FC = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/cadna_c-3.1.11/admin/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/yohan/Work/verificarlo/experiments/NPB-CPP-cadna/install
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#lib_LIBRARIES = libcadnaFortran.a
#libcadnaFortran_a_SOURCES = \
#cadna_binding.cc \
#cadna_utils_binding.cc \
#$(CCSOURCES) \
#$(F90SOURCES)

#nodist_include_HEADERS = $(F90SOURCES:.f90=.mod)
#CCSOURCES = \
#cadna_add_binding.cc \
#cadna_affect_binding.cc \
#cadna_convert_binding.cc \
#cadna_div_binding.cc \
#cadna_eq_binding.cc \
#cadna_ge_binding.cc \
#cadna_gt_binding.cc \
#cadna_le_binding.cc \
#cadna_lt_binding.cc \
#cadna_math_binding.cc \
#cadna_mult_binding.cc \
#cadna_ne_binding.cc \
#cadna_opp_binding.cc \
#cadna_pow_binding.cc \
#cadna_sub_binding.cc \
#cadna_plus_binding.cc

#F90SOURCES = cadna_types.f90  cadna_add.f90 cadna_affect.f90 cadna_div.f90 \
#cadna_gt.f90  cadna_ge.f90 cadna_lt.f90 cadna_le.f90  \
#cadna_eq.f90 cadna_ne.f90  \
#cadna_convert.f90 cadna_prec.f90 \
#cadna_mult.f90 cadna_sub.f90 cadna_pow.f90 cadna_opp.f90 \
#cadna_math.f90 cadna_utils.f90 cadna_array.f90  cadna_plus.f90 \
#cadna_cmplx_add.f90  cadna_cmplx_sub.f90    cadna_cmplx_opp.f90 \
#cadna_cmplx_affect.f90 cadna_cmplx_convert.f90 cadna_cmplx_mult.f90   cadna_cmplx_div.f90   \
#cadna_cmplx_eq.f90       cadna_cmplx_ne.f90 \
#cadna_cmplx_math.f90    cadna_cmplx_pow.f90 cadna_cmplx_array.f90 cadna_cmplx_plus.f90    cadna.f90

#libcadnaFortran_a_FCFLAGS = $(AM_FCFLAGS)  $(FCFLAGS) 
#libcadnaFortran_a_CXXFLAGS = -I../srcC   $(AM_CXXFLAGS) $(CXXCADNADEBUGFLAGS) $(CXXFLAGS) 
#CLEANFILES = $(nodist_include_HEADERS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .f90 .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu srcFortran/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu srcFortran/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libcadnaFortran.a: $(libcadnaFortran_a_OBJECTS) $(libcadnaFortran_a_DEPENDENCIES) $(EXTRA_libcadnaFortran_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcadnaFortran.a
	$(AM_V_AR)$(libcadnaFortran_a_AR) libcadnaFortran.a $(libcadnaFortran_a_OBJECTS) $(libcadnaFortran_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcadnaFortran.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libcadnaFortran_a-cadna_add_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_affect_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_convert_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_div_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_eq_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_ge_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_gt_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_le_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_lt_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_math_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_mult_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_ne_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_opp_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_plus_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_pow_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_sub_binding.Po
include ./$(DEPDIR)/libcadnaFortran_a-cadna_utils_binding.Po

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libcadnaFortran_a-cadna_binding.o: cadna_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_binding.Tpo -c -o libcadnaFortran_a-cadna_binding.o `test -f 'cadna_binding.cc' || echo '$(srcdir)/'`cadna_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_binding.Po
#	$(AM_V_CXX)source='cadna_binding.cc' object='libcadnaFortran_a-cadna_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_binding.o `test -f 'cadna_binding.cc' || echo '$(srcdir)/'`cadna_binding.cc

libcadnaFortran_a-cadna_binding.obj: cadna_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_binding.Tpo -c -o libcadnaFortran_a-cadna_binding.obj `if test -f 'cadna_binding.cc'; then $(CYGPATH_W) 'cadna_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_binding.Po
#	$(AM_V_CXX)source='cadna_binding.cc' object='libcadnaFortran_a-cadna_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_binding.obj `if test -f 'cadna_binding.cc'; then $(CYGPATH_W) 'cadna_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_binding.cc'; fi`

libcadnaFortran_a-cadna_utils_binding.o: cadna_utils_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_utils_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_utils_binding.Tpo -c -o libcadnaFortran_a-cadna_utils_binding.o `test -f 'cadna_utils_binding.cc' || echo '$(srcdir)/'`cadna_utils_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_utils_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_utils_binding.Po
#	$(AM_V_CXX)source='cadna_utils_binding.cc' object='libcadnaFortran_a-cadna_utils_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_utils_binding.o `test -f 'cadna_utils_binding.cc' || echo '$(srcdir)/'`cadna_utils_binding.cc

libcadnaFortran_a-cadna_utils_binding.obj: cadna_utils_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_utils_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_utils_binding.Tpo -c -o libcadnaFortran_a-cadna_utils_binding.obj `if test -f 'cadna_utils_binding.cc'; then $(CYGPATH_W) 'cadna_utils_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_utils_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_utils_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_utils_binding.Po
#	$(AM_V_CXX)source='cadna_utils_binding.cc' object='libcadnaFortran_a-cadna_utils_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_utils_binding.obj `if test -f 'cadna_utils_binding.cc'; then $(CYGPATH_W) 'cadna_utils_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_utils_binding.cc'; fi`

libcadnaFortran_a-cadna_add_binding.o: cadna_add_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_add_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_add_binding.Tpo -c -o libcadnaFortran_a-cadna_add_binding.o `test -f 'cadna_add_binding.cc' || echo '$(srcdir)/'`cadna_add_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_add_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_add_binding.Po
#	$(AM_V_CXX)source='cadna_add_binding.cc' object='libcadnaFortran_a-cadna_add_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_add_binding.o `test -f 'cadna_add_binding.cc' || echo '$(srcdir)/'`cadna_add_binding.cc

libcadnaFortran_a-cadna_add_binding.obj: cadna_add_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_add_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_add_binding.Tpo -c -o libcadnaFortran_a-cadna_add_binding.obj `if test -f 'cadna_add_binding.cc'; then $(CYGPATH_W) 'cadna_add_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_add_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_add_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_add_binding.Po
#	$(AM_V_CXX)source='cadna_add_binding.cc' object='libcadnaFortran_a-cadna_add_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_add_binding.obj `if test -f 'cadna_add_binding.cc'; then $(CYGPATH_W) 'cadna_add_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_add_binding.cc'; fi`

libcadnaFortran_a-cadna_affect_binding.o: cadna_affect_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_affect_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_affect_binding.Tpo -c -o libcadnaFortran_a-cadna_affect_binding.o `test -f 'cadna_affect_binding.cc' || echo '$(srcdir)/'`cadna_affect_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_affect_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_affect_binding.Po
#	$(AM_V_CXX)source='cadna_affect_binding.cc' object='libcadnaFortran_a-cadna_affect_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_affect_binding.o `test -f 'cadna_affect_binding.cc' || echo '$(srcdir)/'`cadna_affect_binding.cc

libcadnaFortran_a-cadna_affect_binding.obj: cadna_affect_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_affect_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_affect_binding.Tpo -c -o libcadnaFortran_a-cadna_affect_binding.obj `if test -f 'cadna_affect_binding.cc'; then $(CYGPATH_W) 'cadna_affect_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_affect_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_affect_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_affect_binding.Po
#	$(AM_V_CXX)source='cadna_affect_binding.cc' object='libcadnaFortran_a-cadna_affect_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_affect_binding.obj `if test -f 'cadna_affect_binding.cc'; then $(CYGPATH_W) 'cadna_affect_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_affect_binding.cc'; fi`

libcadnaFortran_a-cadna_convert_binding.o: cadna_convert_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_convert_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_convert_binding.Tpo -c -o libcadnaFortran_a-cadna_convert_binding.o `test -f 'cadna_convert_binding.cc' || echo '$(srcdir)/'`cadna_convert_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_convert_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_convert_binding.Po
#	$(AM_V_CXX)source='cadna_convert_binding.cc' object='libcadnaFortran_a-cadna_convert_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_convert_binding.o `test -f 'cadna_convert_binding.cc' || echo '$(srcdir)/'`cadna_convert_binding.cc

libcadnaFortran_a-cadna_convert_binding.obj: cadna_convert_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_convert_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_convert_binding.Tpo -c -o libcadnaFortran_a-cadna_convert_binding.obj `if test -f 'cadna_convert_binding.cc'; then $(CYGPATH_W) 'cadna_convert_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_convert_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_convert_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_convert_binding.Po
#	$(AM_V_CXX)source='cadna_convert_binding.cc' object='libcadnaFortran_a-cadna_convert_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_convert_binding.obj `if test -f 'cadna_convert_binding.cc'; then $(CYGPATH_W) 'cadna_convert_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_convert_binding.cc'; fi`

libcadnaFortran_a-cadna_div_binding.o: cadna_div_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_div_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_div_binding.Tpo -c -o libcadnaFortran_a-cadna_div_binding.o `test -f 'cadna_div_binding.cc' || echo '$(srcdir)/'`cadna_div_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_div_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_div_binding.Po
#	$(AM_V_CXX)source='cadna_div_binding.cc' object='libcadnaFortran_a-cadna_div_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_div_binding.o `test -f 'cadna_div_binding.cc' || echo '$(srcdir)/'`cadna_div_binding.cc

libcadnaFortran_a-cadna_div_binding.obj: cadna_div_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_div_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_div_binding.Tpo -c -o libcadnaFortran_a-cadna_div_binding.obj `if test -f 'cadna_div_binding.cc'; then $(CYGPATH_W) 'cadna_div_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_div_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_div_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_div_binding.Po
#	$(AM_V_CXX)source='cadna_div_binding.cc' object='libcadnaFortran_a-cadna_div_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_div_binding.obj `if test -f 'cadna_div_binding.cc'; then $(CYGPATH_W) 'cadna_div_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_div_binding.cc'; fi`

libcadnaFortran_a-cadna_eq_binding.o: cadna_eq_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_eq_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_eq_binding.Tpo -c -o libcadnaFortran_a-cadna_eq_binding.o `test -f 'cadna_eq_binding.cc' || echo '$(srcdir)/'`cadna_eq_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_eq_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_eq_binding.Po
#	$(AM_V_CXX)source='cadna_eq_binding.cc' object='libcadnaFortran_a-cadna_eq_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_eq_binding.o `test -f 'cadna_eq_binding.cc' || echo '$(srcdir)/'`cadna_eq_binding.cc

libcadnaFortran_a-cadna_eq_binding.obj: cadna_eq_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_eq_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_eq_binding.Tpo -c -o libcadnaFortran_a-cadna_eq_binding.obj `if test -f 'cadna_eq_binding.cc'; then $(CYGPATH_W) 'cadna_eq_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_eq_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_eq_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_eq_binding.Po
#	$(AM_V_CXX)source='cadna_eq_binding.cc' object='libcadnaFortran_a-cadna_eq_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_eq_binding.obj `if test -f 'cadna_eq_binding.cc'; then $(CYGPATH_W) 'cadna_eq_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_eq_binding.cc'; fi`

libcadnaFortran_a-cadna_ge_binding.o: cadna_ge_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_ge_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_ge_binding.Tpo -c -o libcadnaFortran_a-cadna_ge_binding.o `test -f 'cadna_ge_binding.cc' || echo '$(srcdir)/'`cadna_ge_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_ge_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_ge_binding.Po
#	$(AM_V_CXX)source='cadna_ge_binding.cc' object='libcadnaFortran_a-cadna_ge_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_ge_binding.o `test -f 'cadna_ge_binding.cc' || echo '$(srcdir)/'`cadna_ge_binding.cc

libcadnaFortran_a-cadna_ge_binding.obj: cadna_ge_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_ge_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_ge_binding.Tpo -c -o libcadnaFortran_a-cadna_ge_binding.obj `if test -f 'cadna_ge_binding.cc'; then $(CYGPATH_W) 'cadna_ge_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_ge_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_ge_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_ge_binding.Po
#	$(AM_V_CXX)source='cadna_ge_binding.cc' object='libcadnaFortran_a-cadna_ge_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_ge_binding.obj `if test -f 'cadna_ge_binding.cc'; then $(CYGPATH_W) 'cadna_ge_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_ge_binding.cc'; fi`

libcadnaFortran_a-cadna_gt_binding.o: cadna_gt_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_gt_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_gt_binding.Tpo -c -o libcadnaFortran_a-cadna_gt_binding.o `test -f 'cadna_gt_binding.cc' || echo '$(srcdir)/'`cadna_gt_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_gt_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_gt_binding.Po
#	$(AM_V_CXX)source='cadna_gt_binding.cc' object='libcadnaFortran_a-cadna_gt_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_gt_binding.o `test -f 'cadna_gt_binding.cc' || echo '$(srcdir)/'`cadna_gt_binding.cc

libcadnaFortran_a-cadna_gt_binding.obj: cadna_gt_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_gt_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_gt_binding.Tpo -c -o libcadnaFortran_a-cadna_gt_binding.obj `if test -f 'cadna_gt_binding.cc'; then $(CYGPATH_W) 'cadna_gt_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_gt_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_gt_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_gt_binding.Po
#	$(AM_V_CXX)source='cadna_gt_binding.cc' object='libcadnaFortran_a-cadna_gt_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_gt_binding.obj `if test -f 'cadna_gt_binding.cc'; then $(CYGPATH_W) 'cadna_gt_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_gt_binding.cc'; fi`

libcadnaFortran_a-cadna_le_binding.o: cadna_le_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_le_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_le_binding.Tpo -c -o libcadnaFortran_a-cadna_le_binding.o `test -f 'cadna_le_binding.cc' || echo '$(srcdir)/'`cadna_le_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_le_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_le_binding.Po
#	$(AM_V_CXX)source='cadna_le_binding.cc' object='libcadnaFortran_a-cadna_le_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_le_binding.o `test -f 'cadna_le_binding.cc' || echo '$(srcdir)/'`cadna_le_binding.cc

libcadnaFortran_a-cadna_le_binding.obj: cadna_le_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_le_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_le_binding.Tpo -c -o libcadnaFortran_a-cadna_le_binding.obj `if test -f 'cadna_le_binding.cc'; then $(CYGPATH_W) 'cadna_le_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_le_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_le_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_le_binding.Po
#	$(AM_V_CXX)source='cadna_le_binding.cc' object='libcadnaFortran_a-cadna_le_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_le_binding.obj `if test -f 'cadna_le_binding.cc'; then $(CYGPATH_W) 'cadna_le_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_le_binding.cc'; fi`

libcadnaFortran_a-cadna_lt_binding.o: cadna_lt_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_lt_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_lt_binding.Tpo -c -o libcadnaFortran_a-cadna_lt_binding.o `test -f 'cadna_lt_binding.cc' || echo '$(srcdir)/'`cadna_lt_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_lt_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_lt_binding.Po
#	$(AM_V_CXX)source='cadna_lt_binding.cc' object='libcadnaFortran_a-cadna_lt_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_lt_binding.o `test -f 'cadna_lt_binding.cc' || echo '$(srcdir)/'`cadna_lt_binding.cc

libcadnaFortran_a-cadna_lt_binding.obj: cadna_lt_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_lt_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_lt_binding.Tpo -c -o libcadnaFortran_a-cadna_lt_binding.obj `if test -f 'cadna_lt_binding.cc'; then $(CYGPATH_W) 'cadna_lt_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_lt_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_lt_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_lt_binding.Po
#	$(AM_V_CXX)source='cadna_lt_binding.cc' object='libcadnaFortran_a-cadna_lt_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_lt_binding.obj `if test -f 'cadna_lt_binding.cc'; then $(CYGPATH_W) 'cadna_lt_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_lt_binding.cc'; fi`

libcadnaFortran_a-cadna_math_binding.o: cadna_math_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_math_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_math_binding.Tpo -c -o libcadnaFortran_a-cadna_math_binding.o `test -f 'cadna_math_binding.cc' || echo '$(srcdir)/'`cadna_math_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_math_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_math_binding.Po
#	$(AM_V_CXX)source='cadna_math_binding.cc' object='libcadnaFortran_a-cadna_math_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_math_binding.o `test -f 'cadna_math_binding.cc' || echo '$(srcdir)/'`cadna_math_binding.cc

libcadnaFortran_a-cadna_math_binding.obj: cadna_math_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_math_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_math_binding.Tpo -c -o libcadnaFortran_a-cadna_math_binding.obj `if test -f 'cadna_math_binding.cc'; then $(CYGPATH_W) 'cadna_math_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_math_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_math_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_math_binding.Po
#	$(AM_V_CXX)source='cadna_math_binding.cc' object='libcadnaFortran_a-cadna_math_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_math_binding.obj `if test -f 'cadna_math_binding.cc'; then $(CYGPATH_W) 'cadna_math_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_math_binding.cc'; fi`

libcadnaFortran_a-cadna_mult_binding.o: cadna_mult_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_mult_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_mult_binding.Tpo -c -o libcadnaFortran_a-cadna_mult_binding.o `test -f 'cadna_mult_binding.cc' || echo '$(srcdir)/'`cadna_mult_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_mult_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_mult_binding.Po
#	$(AM_V_CXX)source='cadna_mult_binding.cc' object='libcadnaFortran_a-cadna_mult_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_mult_binding.o `test -f 'cadna_mult_binding.cc' || echo '$(srcdir)/'`cadna_mult_binding.cc

libcadnaFortran_a-cadna_mult_binding.obj: cadna_mult_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_mult_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_mult_binding.Tpo -c -o libcadnaFortran_a-cadna_mult_binding.obj `if test -f 'cadna_mult_binding.cc'; then $(CYGPATH_W) 'cadna_mult_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_mult_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_mult_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_mult_binding.Po
#	$(AM_V_CXX)source='cadna_mult_binding.cc' object='libcadnaFortran_a-cadna_mult_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_mult_binding.obj `if test -f 'cadna_mult_binding.cc'; then $(CYGPATH_W) 'cadna_mult_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_mult_binding.cc'; fi`

libcadnaFortran_a-cadna_ne_binding.o: cadna_ne_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_ne_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_ne_binding.Tpo -c -o libcadnaFortran_a-cadna_ne_binding.o `test -f 'cadna_ne_binding.cc' || echo '$(srcdir)/'`cadna_ne_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_ne_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_ne_binding.Po
#	$(AM_V_CXX)source='cadna_ne_binding.cc' object='libcadnaFortran_a-cadna_ne_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_ne_binding.o `test -f 'cadna_ne_binding.cc' || echo '$(srcdir)/'`cadna_ne_binding.cc

libcadnaFortran_a-cadna_ne_binding.obj: cadna_ne_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_ne_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_ne_binding.Tpo -c -o libcadnaFortran_a-cadna_ne_binding.obj `if test -f 'cadna_ne_binding.cc'; then $(CYGPATH_W) 'cadna_ne_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_ne_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_ne_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_ne_binding.Po
#	$(AM_V_CXX)source='cadna_ne_binding.cc' object='libcadnaFortran_a-cadna_ne_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_ne_binding.obj `if test -f 'cadna_ne_binding.cc'; then $(CYGPATH_W) 'cadna_ne_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_ne_binding.cc'; fi`

libcadnaFortran_a-cadna_opp_binding.o: cadna_opp_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_opp_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_opp_binding.Tpo -c -o libcadnaFortran_a-cadna_opp_binding.o `test -f 'cadna_opp_binding.cc' || echo '$(srcdir)/'`cadna_opp_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_opp_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_opp_binding.Po
#	$(AM_V_CXX)source='cadna_opp_binding.cc' object='libcadnaFortran_a-cadna_opp_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_opp_binding.o `test -f 'cadna_opp_binding.cc' || echo '$(srcdir)/'`cadna_opp_binding.cc

libcadnaFortran_a-cadna_opp_binding.obj: cadna_opp_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_opp_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_opp_binding.Tpo -c -o libcadnaFortran_a-cadna_opp_binding.obj `if test -f 'cadna_opp_binding.cc'; then $(CYGPATH_W) 'cadna_opp_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_opp_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_opp_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_opp_binding.Po
#	$(AM_V_CXX)source='cadna_opp_binding.cc' object='libcadnaFortran_a-cadna_opp_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_opp_binding.obj `if test -f 'cadna_opp_binding.cc'; then $(CYGPATH_W) 'cadna_opp_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_opp_binding.cc'; fi`

libcadnaFortran_a-cadna_pow_binding.o: cadna_pow_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_pow_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_pow_binding.Tpo -c -o libcadnaFortran_a-cadna_pow_binding.o `test -f 'cadna_pow_binding.cc' || echo '$(srcdir)/'`cadna_pow_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_pow_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_pow_binding.Po
#	$(AM_V_CXX)source='cadna_pow_binding.cc' object='libcadnaFortran_a-cadna_pow_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_pow_binding.o `test -f 'cadna_pow_binding.cc' || echo '$(srcdir)/'`cadna_pow_binding.cc

libcadnaFortran_a-cadna_pow_binding.obj: cadna_pow_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_pow_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_pow_binding.Tpo -c -o libcadnaFortran_a-cadna_pow_binding.obj `if test -f 'cadna_pow_binding.cc'; then $(CYGPATH_W) 'cadna_pow_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_pow_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_pow_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_pow_binding.Po
#	$(AM_V_CXX)source='cadna_pow_binding.cc' object='libcadnaFortran_a-cadna_pow_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_pow_binding.obj `if test -f 'cadna_pow_binding.cc'; then $(CYGPATH_W) 'cadna_pow_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_pow_binding.cc'; fi`

libcadnaFortran_a-cadna_sub_binding.o: cadna_sub_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_sub_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_sub_binding.Tpo -c -o libcadnaFortran_a-cadna_sub_binding.o `test -f 'cadna_sub_binding.cc' || echo '$(srcdir)/'`cadna_sub_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_sub_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_sub_binding.Po
#	$(AM_V_CXX)source='cadna_sub_binding.cc' object='libcadnaFortran_a-cadna_sub_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_sub_binding.o `test -f 'cadna_sub_binding.cc' || echo '$(srcdir)/'`cadna_sub_binding.cc

libcadnaFortran_a-cadna_sub_binding.obj: cadna_sub_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_sub_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_sub_binding.Tpo -c -o libcadnaFortran_a-cadna_sub_binding.obj `if test -f 'cadna_sub_binding.cc'; then $(CYGPATH_W) 'cadna_sub_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_sub_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_sub_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_sub_binding.Po
#	$(AM_V_CXX)source='cadna_sub_binding.cc' object='libcadnaFortran_a-cadna_sub_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_sub_binding.obj `if test -f 'cadna_sub_binding.cc'; then $(CYGPATH_W) 'cadna_sub_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_sub_binding.cc'; fi`

libcadnaFortran_a-cadna_plus_binding.o: cadna_plus_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_plus_binding.o -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_plus_binding.Tpo -c -o libcadnaFortran_a-cadna_plus_binding.o `test -f 'cadna_plus_binding.cc' || echo '$(srcdir)/'`cadna_plus_binding.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_plus_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_plus_binding.Po
#	$(AM_V_CXX)source='cadna_plus_binding.cc' object='libcadnaFortran_a-cadna_plus_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_plus_binding.o `test -f 'cadna_plus_binding.cc' || echo '$(srcdir)/'`cadna_plus_binding.cc

libcadnaFortran_a-cadna_plus_binding.obj: cadna_plus_binding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -MT libcadnaFortran_a-cadna_plus_binding.obj -MD -MP -MF $(DEPDIR)/libcadnaFortran_a-cadna_plus_binding.Tpo -c -o libcadnaFortran_a-cadna_plus_binding.obj `if test -f 'cadna_plus_binding.cc'; then $(CYGPATH_W) 'cadna_plus_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_plus_binding.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libcadnaFortran_a-cadna_plus_binding.Tpo $(DEPDIR)/libcadnaFortran_a-cadna_plus_binding.Po
#	$(AM_V_CXX)source='cadna_plus_binding.cc' object='libcadnaFortran_a-cadna_plus_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcadnaFortran_a_CXXFLAGS) $(CXXFLAGS) -c -o libcadnaFortran_a-cadna_plus_binding.obj `if test -f 'cadna_plus_binding.cc'; then $(CYGPATH_W) 'cadna_plus_binding.cc'; else $(CYGPATH_W) '$(srcdir)/cadna_plus_binding.cc'; fi`

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libcadnaFortran_a-cadna_types.o: cadna_types.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_types.o `test -f 'cadna_types.f90' || echo '$(srcdir)/'`cadna_types.f90

libcadnaFortran_a-cadna_types.obj: cadna_types.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_types.obj `if test -f 'cadna_types.f90'; then $(CYGPATH_W) 'cadna_types.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_types.f90'; fi`

libcadnaFortran_a-cadna_add.o: cadna_add.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_add.o `test -f 'cadna_add.f90' || echo '$(srcdir)/'`cadna_add.f90

libcadnaFortran_a-cadna_add.obj: cadna_add.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_add.obj `if test -f 'cadna_add.f90'; then $(CYGPATH_W) 'cadna_add.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_add.f90'; fi`

libcadnaFortran_a-cadna_affect.o: cadna_affect.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_affect.o `test -f 'cadna_affect.f90' || echo '$(srcdir)/'`cadna_affect.f90

libcadnaFortran_a-cadna_affect.obj: cadna_affect.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_affect.obj `if test -f 'cadna_affect.f90'; then $(CYGPATH_W) 'cadna_affect.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_affect.f90'; fi`

libcadnaFortran_a-cadna_div.o: cadna_div.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_div.o `test -f 'cadna_div.f90' || echo '$(srcdir)/'`cadna_div.f90

libcadnaFortran_a-cadna_div.obj: cadna_div.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_div.obj `if test -f 'cadna_div.f90'; then $(CYGPATH_W) 'cadna_div.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_div.f90'; fi`

libcadnaFortran_a-cadna_gt.o: cadna_gt.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_gt.o `test -f 'cadna_gt.f90' || echo '$(srcdir)/'`cadna_gt.f90

libcadnaFortran_a-cadna_gt.obj: cadna_gt.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_gt.obj `if test -f 'cadna_gt.f90'; then $(CYGPATH_W) 'cadna_gt.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_gt.f90'; fi`

libcadnaFortran_a-cadna_ge.o: cadna_ge.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_ge.o `test -f 'cadna_ge.f90' || echo '$(srcdir)/'`cadna_ge.f90

libcadnaFortran_a-cadna_ge.obj: cadna_ge.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_ge.obj `if test -f 'cadna_ge.f90'; then $(CYGPATH_W) 'cadna_ge.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_ge.f90'; fi`

libcadnaFortran_a-cadna_lt.o: cadna_lt.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_lt.o `test -f 'cadna_lt.f90' || echo '$(srcdir)/'`cadna_lt.f90

libcadnaFortran_a-cadna_lt.obj: cadna_lt.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_lt.obj `if test -f 'cadna_lt.f90'; then $(CYGPATH_W) 'cadna_lt.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_lt.f90'; fi`

libcadnaFortran_a-cadna_le.o: cadna_le.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_le.o `test -f 'cadna_le.f90' || echo '$(srcdir)/'`cadna_le.f90

libcadnaFortran_a-cadna_le.obj: cadna_le.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_le.obj `if test -f 'cadna_le.f90'; then $(CYGPATH_W) 'cadna_le.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_le.f90'; fi`

libcadnaFortran_a-cadna_eq.o: cadna_eq.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_eq.o `test -f 'cadna_eq.f90' || echo '$(srcdir)/'`cadna_eq.f90

libcadnaFortran_a-cadna_eq.obj: cadna_eq.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_eq.obj `if test -f 'cadna_eq.f90'; then $(CYGPATH_W) 'cadna_eq.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_eq.f90'; fi`

libcadnaFortran_a-cadna_ne.o: cadna_ne.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_ne.o `test -f 'cadna_ne.f90' || echo '$(srcdir)/'`cadna_ne.f90

libcadnaFortran_a-cadna_ne.obj: cadna_ne.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_ne.obj `if test -f 'cadna_ne.f90'; then $(CYGPATH_W) 'cadna_ne.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_ne.f90'; fi`

libcadnaFortran_a-cadna_convert.o: cadna_convert.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_convert.o `test -f 'cadna_convert.f90' || echo '$(srcdir)/'`cadna_convert.f90

libcadnaFortran_a-cadna_convert.obj: cadna_convert.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_convert.obj `if test -f 'cadna_convert.f90'; then $(CYGPATH_W) 'cadna_convert.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_convert.f90'; fi`

libcadnaFortran_a-cadna_prec.o: cadna_prec.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_prec.o `test -f 'cadna_prec.f90' || echo '$(srcdir)/'`cadna_prec.f90

libcadnaFortran_a-cadna_prec.obj: cadna_prec.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_prec.obj `if test -f 'cadna_prec.f90'; then $(CYGPATH_W) 'cadna_prec.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_prec.f90'; fi`

libcadnaFortran_a-cadna_mult.o: cadna_mult.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_mult.o `test -f 'cadna_mult.f90' || echo '$(srcdir)/'`cadna_mult.f90

libcadnaFortran_a-cadna_mult.obj: cadna_mult.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_mult.obj `if test -f 'cadna_mult.f90'; then $(CYGPATH_W) 'cadna_mult.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_mult.f90'; fi`

libcadnaFortran_a-cadna_sub.o: cadna_sub.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_sub.o `test -f 'cadna_sub.f90' || echo '$(srcdir)/'`cadna_sub.f90

libcadnaFortran_a-cadna_sub.obj: cadna_sub.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_sub.obj `if test -f 'cadna_sub.f90'; then $(CYGPATH_W) 'cadna_sub.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_sub.f90'; fi`

libcadnaFortran_a-cadna_pow.o: cadna_pow.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_pow.o `test -f 'cadna_pow.f90' || echo '$(srcdir)/'`cadna_pow.f90

libcadnaFortran_a-cadna_pow.obj: cadna_pow.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_pow.obj `if test -f 'cadna_pow.f90'; then $(CYGPATH_W) 'cadna_pow.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_pow.f90'; fi`

libcadnaFortran_a-cadna_opp.o: cadna_opp.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_opp.o `test -f 'cadna_opp.f90' || echo '$(srcdir)/'`cadna_opp.f90

libcadnaFortran_a-cadna_opp.obj: cadna_opp.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_opp.obj `if test -f 'cadna_opp.f90'; then $(CYGPATH_W) 'cadna_opp.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_opp.f90'; fi`

libcadnaFortran_a-cadna_math.o: cadna_math.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_math.o `test -f 'cadna_math.f90' || echo '$(srcdir)/'`cadna_math.f90

libcadnaFortran_a-cadna_math.obj: cadna_math.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_math.obj `if test -f 'cadna_math.f90'; then $(CYGPATH_W) 'cadna_math.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_math.f90'; fi`

libcadnaFortran_a-cadna_utils.o: cadna_utils.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_utils.o `test -f 'cadna_utils.f90' || echo '$(srcdir)/'`cadna_utils.f90

libcadnaFortran_a-cadna_utils.obj: cadna_utils.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_utils.obj `if test -f 'cadna_utils.f90'; then $(CYGPATH_W) 'cadna_utils.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_utils.f90'; fi`

libcadnaFortran_a-cadna_array.o: cadna_array.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_array.o `test -f 'cadna_array.f90' || echo '$(srcdir)/'`cadna_array.f90

libcadnaFortran_a-cadna_array.obj: cadna_array.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_array.obj `if test -f 'cadna_array.f90'; then $(CYGPATH_W) 'cadna_array.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_array.f90'; fi`

libcadnaFortran_a-cadna_plus.o: cadna_plus.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_plus.o `test -f 'cadna_plus.f90' || echo '$(srcdir)/'`cadna_plus.f90

libcadnaFortran_a-cadna_plus.obj: cadna_plus.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_plus.obj `if test -f 'cadna_plus.f90'; then $(CYGPATH_W) 'cadna_plus.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_plus.f90'; fi`

libcadnaFortran_a-cadna_cmplx_add.o: cadna_cmplx_add.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_add.o `test -f 'cadna_cmplx_add.f90' || echo '$(srcdir)/'`cadna_cmplx_add.f90

libcadnaFortran_a-cadna_cmplx_add.obj: cadna_cmplx_add.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_add.obj `if test -f 'cadna_cmplx_add.f90'; then $(CYGPATH_W) 'cadna_cmplx_add.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_add.f90'; fi`

libcadnaFortran_a-cadna_cmplx_sub.o: cadna_cmplx_sub.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_sub.o `test -f 'cadna_cmplx_sub.f90' || echo '$(srcdir)/'`cadna_cmplx_sub.f90

libcadnaFortran_a-cadna_cmplx_sub.obj: cadna_cmplx_sub.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_sub.obj `if test -f 'cadna_cmplx_sub.f90'; then $(CYGPATH_W) 'cadna_cmplx_sub.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_sub.f90'; fi`

libcadnaFortran_a-cadna_cmplx_opp.o: cadna_cmplx_opp.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_opp.o `test -f 'cadna_cmplx_opp.f90' || echo '$(srcdir)/'`cadna_cmplx_opp.f90

libcadnaFortran_a-cadna_cmplx_opp.obj: cadna_cmplx_opp.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_opp.obj `if test -f 'cadna_cmplx_opp.f90'; then $(CYGPATH_W) 'cadna_cmplx_opp.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_opp.f90'; fi`

libcadnaFortran_a-cadna_cmplx_affect.o: cadna_cmplx_affect.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_affect.o `test -f 'cadna_cmplx_affect.f90' || echo '$(srcdir)/'`cadna_cmplx_affect.f90

libcadnaFortran_a-cadna_cmplx_affect.obj: cadna_cmplx_affect.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_affect.obj `if test -f 'cadna_cmplx_affect.f90'; then $(CYGPATH_W) 'cadna_cmplx_affect.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_affect.f90'; fi`

libcadnaFortran_a-cadna_cmplx_convert.o: cadna_cmplx_convert.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_convert.o `test -f 'cadna_cmplx_convert.f90' || echo '$(srcdir)/'`cadna_cmplx_convert.f90

libcadnaFortran_a-cadna_cmplx_convert.obj: cadna_cmplx_convert.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_convert.obj `if test -f 'cadna_cmplx_convert.f90'; then $(CYGPATH_W) 'cadna_cmplx_convert.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_convert.f90'; fi`

libcadnaFortran_a-cadna_cmplx_mult.o: cadna_cmplx_mult.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_mult.o `test -f 'cadna_cmplx_mult.f90' || echo '$(srcdir)/'`cadna_cmplx_mult.f90

libcadnaFortran_a-cadna_cmplx_mult.obj: cadna_cmplx_mult.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_mult.obj `if test -f 'cadna_cmplx_mult.f90'; then $(CYGPATH_W) 'cadna_cmplx_mult.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_mult.f90'; fi`

libcadnaFortran_a-cadna_cmplx_div.o: cadna_cmplx_div.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_div.o `test -f 'cadna_cmplx_div.f90' || echo '$(srcdir)/'`cadna_cmplx_div.f90

libcadnaFortran_a-cadna_cmplx_div.obj: cadna_cmplx_div.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_div.obj `if test -f 'cadna_cmplx_div.f90'; then $(CYGPATH_W) 'cadna_cmplx_div.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_div.f90'; fi`

libcadnaFortran_a-cadna_cmplx_eq.o: cadna_cmplx_eq.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_eq.o `test -f 'cadna_cmplx_eq.f90' || echo '$(srcdir)/'`cadna_cmplx_eq.f90

libcadnaFortran_a-cadna_cmplx_eq.obj: cadna_cmplx_eq.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_eq.obj `if test -f 'cadna_cmplx_eq.f90'; then $(CYGPATH_W) 'cadna_cmplx_eq.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_eq.f90'; fi`

libcadnaFortran_a-cadna_cmplx_ne.o: cadna_cmplx_ne.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_ne.o `test -f 'cadna_cmplx_ne.f90' || echo '$(srcdir)/'`cadna_cmplx_ne.f90

libcadnaFortran_a-cadna_cmplx_ne.obj: cadna_cmplx_ne.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_ne.obj `if test -f 'cadna_cmplx_ne.f90'; then $(CYGPATH_W) 'cadna_cmplx_ne.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_ne.f90'; fi`

libcadnaFortran_a-cadna_cmplx_math.o: cadna_cmplx_math.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_math.o `test -f 'cadna_cmplx_math.f90' || echo '$(srcdir)/'`cadna_cmplx_math.f90

libcadnaFortran_a-cadna_cmplx_math.obj: cadna_cmplx_math.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_math.obj `if test -f 'cadna_cmplx_math.f90'; then $(CYGPATH_W) 'cadna_cmplx_math.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_math.f90'; fi`

libcadnaFortran_a-cadna_cmplx_pow.o: cadna_cmplx_pow.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_pow.o `test -f 'cadna_cmplx_pow.f90' || echo '$(srcdir)/'`cadna_cmplx_pow.f90

libcadnaFortran_a-cadna_cmplx_pow.obj: cadna_cmplx_pow.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_pow.obj `if test -f 'cadna_cmplx_pow.f90'; then $(CYGPATH_W) 'cadna_cmplx_pow.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_pow.f90'; fi`

libcadnaFortran_a-cadna_cmplx_array.o: cadna_cmplx_array.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_array.o `test -f 'cadna_cmplx_array.f90' || echo '$(srcdir)/'`cadna_cmplx_array.f90

libcadnaFortran_a-cadna_cmplx_array.obj: cadna_cmplx_array.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_array.obj `if test -f 'cadna_cmplx_array.f90'; then $(CYGPATH_W) 'cadna_cmplx_array.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_array.f90'; fi`

libcadnaFortran_a-cadna_cmplx_plus.o: cadna_cmplx_plus.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_plus.o `test -f 'cadna_cmplx_plus.f90' || echo '$(srcdir)/'`cadna_cmplx_plus.f90

libcadnaFortran_a-cadna_cmplx_plus.obj: cadna_cmplx_plus.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna_cmplx_plus.obj `if test -f 'cadna_cmplx_plus.f90'; then $(CYGPATH_W) 'cadna_cmplx_plus.f90'; else $(CYGPATH_W) '$(srcdir)/cadna_cmplx_plus.f90'; fi`

libcadnaFortran_a-cadna.o: cadna.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna.o `test -f 'cadna.f90' || echo '$(srcdir)/'`cadna.f90

libcadnaFortran_a-cadna.obj: cadna.f90
	$(AM_V_FC)$(FC) $(libcadnaFortran_a_FCFLAGS) $(FCFLAGS) -c -o libcadnaFortran_a-cadna.obj `if test -f 'cadna.f90'; then $(CYGPATH_W) 'cadna.f90'; else $(CYGPATH_W) '$(srcdir)/cadna.f90'; fi`
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nodist_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES uninstall-nodist_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLIBRARIES install-man \
	install-nodist_includeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-libLIBRARIES \
	uninstall-nodist_includeHEADERS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
